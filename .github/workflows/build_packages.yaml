name: Build packages

on:
    push:
    pull_request:
    release:
        types:
            - published
            - prereleased 

jobs:

    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
              os: 
                - ubuntu18.04 
                - ubuntu16.04 
                - ubuntu14.04 
                - debian10
                - debian9 
                - debian8 
                - opensuse
                - centos7 
                - centos6
            
        steps:
        - uses: actions/checkout@v1
        - name: set aws
          run: |
            curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            aws2 configure set aws_access_key_id ${{ secrets.AwsAccessKeyId }} 
            aws2 configure set aws_secret_access_key ${{ secrets.AwsSecretAccessKey }} 
            aws2 configure set default.region us-west-2
        - name: build emqx packages
          env:
            ERL_OTP: erl22.1
            SYSTEM: ${{ matrix.os }}
          run: |
            version=$(git describe --tags --always)
            docker run -i --name emqtt-$SYSTEM-build -v $(pwd):/emqtt emqx/build-env:$ERL_OTP-$SYSTEM /bin/bash -c "make -C /emqtt pkg"
            cd _packages && for var in $(ls); do sudo sh -c "sha256sum $var | awk '{print $1}' > $var.sha256"; done && cd -
            aws2 s3 cp --recursive ./_packages  s3://packages.emqx.io/emqtt/$version
        - name: upload
          if: github.event_name == 'release'
          run: |
            
    build-on-mac:
        runs-on: macos-latest

        steps:
        - uses: actions/checkout@v1
        - name: prepare
          run: |
            /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
            brew install curl zip unzip gnu-sed erlang
            echo "/usr/local/bin:$PATH" >> ~/.bashrc
        - name: set aws
          run: |
            curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-macos.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            aws2 configure set aws_access_key_id ${{ secrets.AwsAccessKeyId }} 
            aws2 configure set aws_secret_access_key ${{ secrets.AwsSecretAccessKey }} 
            aws2 configure set default.region us-west-2
        - name: build
          run: |
            make emqtt
            mkdir -p _packages
            version=$(git describe --tags --always)
            pkg=emqtt-macos-$version.zip
            cd _build/emqtt/rel && zip -rq $pkg emqtt
            mv $pkg _packages/
            openssl dgst -sha256 ./_packages/$pkg | awk '{print $2}' > ./_packages/$pkg.sha256
            aws2 s3 cp --recursive ./_packages  s3://packages.emqx.io/emqtt/$version

    release:
        runs-on: ubuntu-latest

        needs: [build, build-on-mac]
        
        steps:
        - uses: actions/checkout@v2
        - name: set aws
          run: |
            curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            aws2 configure set aws_access_key_id ${{ secrets.AwsAccessKeyId }} 
            aws2 configure set aws_secret_access_key ${{ secrets.AwsSecretAccessKey }} 
            aws2 configure set default.region us-west-2
        - name: get packages
          run: |
            mkdir -p _packages
            version=$(git describe --tags --always)
            aws2 s3 cp s3://packages.emqx.io/emqtt/$version ./_packages
            for var in $(ls ./_packages/emqtt-* |grep -v sha256); do 
                echo "$(cat $var.sha256) $var" | sha256sum -c
            done
        - name: upload github
          if: github.event_name == 'release'
          run: |
            for var in $(ls packages) ; do
                .github/workflows/script/upload_github_release_asset.sh owner=emqx repo=emqtt tag=$version filename=packages/$var github_api_token=$(echo ${{ secrets.AccessToken }})
            done
